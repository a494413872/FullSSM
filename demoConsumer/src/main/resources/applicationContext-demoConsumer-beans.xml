<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd">


    <context:annotation-config />
    <context:component-scan base-package="com.demo">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <aop:aspectj-autoproxy/>

    <!-- 支持异步方法执行 -->
<!--    <task:executor id="myexecutor" pool-size="50-100" queue-capacity="1000" rejection-policy="CALLER_RUNS"/>
    <task:annotation-driven executor="myexecutor"/>-->

<!--    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath*:const.properties</value>
                <value>classpath*:jms.properties</value>
                <value>classpath*:memcached.properties</value>
                <value>classpath*:dubbo.properties</value>
            </list>
        </property>
    </bean>-->
    <bean id="propertyConfigurer" class="com.lvmama.config.ZooKeeperPropertyPlaceholderConfigurer">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:sweet-config.properties</value>
            </list>
        </property>
    </bean>

    <!-- 手动按类型注入文件服务 -->
   <!-- <bean id="fsClient" class="com.lvmama.newcomm.pet.fs.client.FSClient" autowire="byType" />-->

    <!--<bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.border.color">105,179,90</prop>
                        <prop key="kaptcha.textproducer.font.color">255,0,102</prop>
                        <prop key="kaptcha.noise.color">255,0,102</prop>
                        <prop key="kaptcha.image.width">100</prop>
                        <prop key="kaptcha.image.height">30</prop>
                        <prop key="kaptcha.textproducer.font.size">25</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.font.names">Arial,Courier</prop>
                        <prop key="kaptcha.word.impl">com.lvmama.scenic.front.util.kaptcha.KaptchaWordRenderer</prop>
                        <prop key="kaptcha.noise.impl">com.lvmama.scenic.front.util.kaptcha.KaptchaNoise</prop>
                        <prop key="kaptcha.obscurificator.impl">com.lvmama.scenic.front.util.kaptcha.KaptchaGimpy</prop>
                        <prop key="kaptcha.background.clear.from">white</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>-->

    <!--  <alias name="${flightSearchServiceId:flightSearchService_dubbo}"  alias="flightSearchService"/>
    <alias name="${flightOrderServiceRemoteId:flightOrderServiceRemote_dubbo}"  alias="flightOrderServiceRemote"/>
    -->
    <import resource="classpath*:applicationContext-demoConsumer-consumerConfig.xml"/>
    <!--<import resource="classpath*:applicationContext-demoConsumer-providerConfig.xml"/>这里只需要消费不提供所以不接这个配置文件-->
    <import resource="classpath*:applicationContext-demoConsumer-consumer.xml"/>
</beans>